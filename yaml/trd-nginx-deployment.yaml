# nginx-index.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: trd-prd-index
  namespace: trd-frontend
  labels:
    app: index-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: index-app
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  template:
    metadata:
      labels:
        app: index-app
    spec:
      affinity:
        podAntiAffinity:  # 특정 라벨 셀렉터와 일치하는 다른 Pod와 동일한 노드에 스케줄링되지 않도록 하는 규칙을 설정 
         
         # app 키가 index-app 값을 가진 라벨 셀렉터와 일치하는 Pod들이 동일한 topologyKey 
         # (즉, kubernetes.io/hostname)를 가진 노드에 함께 스케줄링되지 않도록 설정 
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - index-app
            topologyKey: "kubernetes.io/hostname"
      containers:
      - image: 412381775968.dkr.ecr.ap-northeast-2.amazonaws.com/trd-dockerhub:nginxindexv1.0
        name: trd-index
        ports:
        - containerPort: 80
        # resources는 128Mi memory와 100m cpu로 guaranteed 상태 보장
        resources:
          requests:
            memory: 128Mi
            cpu: 100m
          limits:
            memory: 128Mi
            cpu: 100m
        livenessProbe:
          httpGet:
            path: /index.jsp # HTTP GET 요청을 사용하여 /index.jsp 경로에서 컨테이너의 상태를 검사
            port: 80
          initialDelaySeconds: 60 # 처음 검사할 때는 60초 동안 대기
          periodSeconds: 10 # 처음 검사할 때는 60초 동안 대기
        readinessProbe:
          httpGet:
            path: /index.jsp
            port: 80
          initialDelaySeconds: 60 # 처음 검사할 때는 60초 동안 대기
          periodSeconds: 10 # 이후 매 10초마다
          successThreshold: 1 # 컨테이너가 준비 상태로 간주되기 위해 연속적으로 성공해야 하는 검사 횟수
          failureThreshold: 5 # 컨테이너 준비 상태 검사가 5번을 실패해야 준비 상태가 아니라고 판ㄷ


---

apiVersion: v1
kind: Service
metadata:
  name: trd-index-svc
  namespace: trd-frontend
spec:
  selector:
    app: index-app
  type: NodePort
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  clusterIP: 172.20.10.10
  
---

# nginx-sign.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: trd-prd-sign
  namespace: trd-frontend
  labels:
    app: sign-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: sign-app
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  template:
    metadata:
      labels:
        app: sign-app
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - sign-app
            topologyKey: "kubernetes.io/hostname"
      containers:
      - image: 412381775968.dkr.ecr.ap-northeast-2.amazonaws.com/trd-dockerhub:nginxsignv1.0
        name: trd-sign
        ports:
        - containerPort: 80
        resources:
          requests:
            memory: 128Mi
            cpu: 100m
          limits:
            memory: 128Mi
            cpu: 100m
        livenessProbe:
          httpGet:
            path: /sign.jsp
            port: 80
          initialDelaySeconds: 60
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /sign.jsp
            port: 80
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 5

---

apiVersion: v1
kind: Service
metadata:
  name: trd-sign-svc
  namespace: trd-frontend
spec:
  selector:
    app: sign-app
  type: NodePort
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  clusterIP: 172.20.10.30
      
---
 
 # nginx-login.yaml
apiVersion: apps/v1
kind: Deployment
 metadata:
  name: trd-prd-login
  namespace: trd-frontend
  labels:
    app: login-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: login-app
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  template:
    metadata:
      labels:
        app: login-app
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - login-app
            topologyKey: "kubernetes.io/hostname"
      containers:
      - image: 412381775968.dkr.ecr.ap-northeast-2.amazonaws.com/trd-dockerhub:nginxloginv1.0
        name: trd-login
        ports:
        - containerPort: 80
        resources:
          requests:
            memory: 256Mi
            cpu: 200m
          limits:
            memory: 256Mi
            cpu: 200m
        livenessProbe:
          httpGet:
            path: /login.jsp
            port: 80
          initialDelaySeconds: 60
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /login.jsp
            port: 80
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 5

---

apiVersion: v1
kind: Service
metadata:
  name: trd-login-svc
  namespace: trd-frontend
spec:
  selector:
    app: login-app
  type: NodePort
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  clusterIP: 172.20.10.50


---

# nginx-doc.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: trd-prd-doc
  namespace: trd-frontend
  labels:
    app: doc-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: doc-app
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  template:
    metadata:
      labels:
        app: doc-app
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - doc-app
            topologyKey: "kubernetes.io/hostname"
      containers:
      - image: 412381775968.dkr.ecr.ap-northeast-2.amazonaws.com/trd-dockerhub:nginxdocv1.0
        name: trd-doc
        ports:
        - containerPort: 80
        resources:
          requests:
            memory: 128Mi
            cpu: 100m
          limits:
            memory: 128Mi
            cpu: 100m
        livenessProbe:
          httpGet:
            path: /docs-search.jsp
            port: 80
          initialDelaySeconds: 60
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /docs-search.jsp
            port: 80
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 5

---

apiVersion: v1
kind: Service
metadata:
  name: trd-doc-svc
  namespace: trd-frontend
spec:
  selector:
    app: doc-app
  type: NodePort
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  clusterIP: 172.20.10.70

---

# nginx-docrg.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: trd-prd-docrg
  namespace: trd-frontend
  labels:
    app: docrg-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: docrg-app
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  template:
    metadata:
      labels:
        app: docrg-app
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - docrg-app
            topologyKey: "kubernetes.io/hostname"
      containers:
      - image: 412381775968.dkr.ecr.ap-northeast-2.amazonaws.com/trd-dockerhub:nginxdocrgv1.0
        name: trd-docrg
        ports:
        - containerPort: 80
        resources:
          requests:
            memory: 128Mi
            cpu: 100m
          limits:
            memory: 128Mi
            cpu: 100m
        livenessProbe:
          httpGet:
            path: /docs-register.jsp
            port: 80
          initialDelaySeconds: 60
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /docs-register.jsp
            port: 80
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 5

---

apiVersion: v1
kind: Service
metadata:
  name: trd-docrg-svc
  namespace: trd-frontend
spec:
  selector:
    app: docrg-app
  type: NodePort
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  clusterIP: 172.20.10.90
