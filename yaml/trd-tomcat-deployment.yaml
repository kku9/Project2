# tom-index.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: trd-tomindex
  namespace: trd-backend
  labels:
    app: index-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: index-app
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  template:
    metadata:
      labels:
        app: index-app
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - index-app
            topologyKey: "kubernetes.io/hostname"
      containers:
      - image: 412381775968.dkr.ecr.ap-northeast-2.amazonaws.com/trd-dockerhub:trdservicev1.0
        name: trd-tomindex
        ports:
        - containerPort: 8080
        resources:
          requests:
            memory: 256Mi
            cpu: 200m
          limits:
            memory: 256Mi
            cpu: 200m
        livenessProbe:
          httpGet:
            path: /index.jsp
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /index.jsp
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 5
        volumeMounts:
        - name: pv-trdindex
          mountPath: /data/index
      volumes:
      - name: pv-trdindex
        persistentVolumeClaim:
          claimName: pvc-trdindex

---

apiVersion: v1
kind: Service
metadata:
  name: tom-index-svc
  namespace: trd-backend
spec:
  selector:
    app: index-app
  type: ClusterIP
  clusterIP: 172.20.10.20
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080

---

#tom-sign.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: trd-tomsign
  namespace: trd-backend
  labels:
    app: sign-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: sign-app
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  template:
    metadata:
      labels:
        app: sign-app
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - sign-app
            topologyKey: "kubernetes.io/hostname"
      containers:
      - image: 412381775968.dkr.ecr.ap-northeast-2.amazonaws.com/trd-dockerhub:trdservicev3.2
        name: tom-sign
        ports:
        - containerPort: 8080
        resources:
          requests:
            memory: 256Mi
            cpu: 200m
          limits:
            memory: 256Mi
            cpu: 200m
        livenessProbe:
          httpGet:
            path: /signup.jsp
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /signup.jsp
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 5
        volumeMounts:
        - name: pv-trdsign
          mountPath: /data/sign
      volumes:
      - name: pv-trdsign
        persistentVolumeClaim:
          claimName: pvc-trdsign

---

apiVersion: v1
kind: Service
metadata:
  name: trd-tomsign-svc
  namespace: trd-backend
spec:
  selector:
    app: sign-app
  type: ClusterIP
  clusterIP: 172.20.10.40
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
      
---

#tom-login.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: trd-tomlogin
  namespace: trd-backend
  labels:
    app: login-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: login-app
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  template:
    metadata:
      labels:
        app: login-app
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - login-app
            topologyKey: "kubernetes.io/hostname"
      containers:
      - image: 412381775968.dkr.ecr.ap-northeast-2.amazonaws.com/trd-dockerhub:trdservicev3.2
        name: tomalb
        ports:
        - containerPort: 8080
        resources:
          requests:
            memory: 256Mi
            cpu: 200m
          limits:
            memory: 256Mi
            cpu: 200m
        livenessProbe:
          httpGet:
            path: /login.jsp
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /login.jsp
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 5
        volumeMounts:
        - name: pv-trdlogin
          mountPath: /data/login
      volumes:
      - name: pv-trdlogin
        persistentVolumeClaim:
          claimName: pvc-trdlogin

---

apiVersion: v1
kind: Service
metadata:
  name: tomlogin-svc
  namespace: trd-backend
spec:
  selector:
    app: login-app
  type: ClusterIP
  clusterIP: 172.20.10.60
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080

---

# tom-doc.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: trd-tomdoc
  namespace: trd-backend
  labels:
    app: doc-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: doc-app
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  template:
    metadata:
      labels:
        app: doc-app
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - doc-app
            topologyKey: "kubernetes.io/hostname"
      containers:
      - image: 412381775968.dkr.ecr.ap-northeast-2.amazonaws.com/trd-dockerhub:trdservicev3.2
        name: trd-tomdoc
        ports:
        - containerPort: 8080
        resources:
          requests:
            memory: 256Mi
            cpu: 200m
          limits:
            memory: 256Mi
            cpu: 200m
        livenessProbe:
          httpGet:
            path: /docs-search.jsp
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /docs-search.jsp
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 5
        volumeMounts:
        - name: pv-trddoc
          mountPath: /data/doc
      volumes:
      - name: pv-trddoc
        persistentVolumeClaim:
          claimName: pvc-trddoc

---

apiVersion: v1
kind: Service
metadata:
  name: trd-tomdoc-svc
  namespace: trd-backend
spec:
  selector:
    app: doc-app
  type: ClusterIP
  clusterIP: 172.20.10.80
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
      
---

# tom-docrg.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: trd-tomdocrg
  namespace: trd-backend
  labels:
    app: docrg-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: docrg-app
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  template:
    metadata:
      labels:
        app: docrg-app
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - docrg-app
            topologyKey: "kubernetes.io/hostname"
      containers:
      - image: 412381775968.dkr.ecr.ap-northeast-2.amazonaws.com/trd-dockerhub:trdservicev3.2
        name: trd-tomdocrg
        ports:
        - containerPort: 8080
        resources:
          requests:
            memory: 256Mi
            cpu: 200m
          limits:
            memory: 256Mi
            cpu: 200m
        livenessProbe:
          httpGet:
            path: /docs-register.jsp
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /docs-registe.jsp
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 5
        volumeMounts:
        - name: pv-trddocrg
          mountPath: /data/docrg
      volumes:
      - name: pv-trddocrg
        persistentVolumeClaim:
          claimName: pvc-trddocrg

---

apiVersion: v1
kind: Service
metadata:
  name: tomdocrg-svc
  namespace: trd-backend
spec:
  selector:
    app: docrg-app
  type: ClusterIP
  clusterIP: 172.20.10.100
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
