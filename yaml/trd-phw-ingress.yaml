#storageclass.yaml
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: efs-sc
provisioner: efs.csi.aws.com
parameters:
  provisioningMode: efs-ap
  fileSystemId: fs-01c4a0f6cf827cabe
  directoryPerms: "700"
  gidRangeStart: "1000" # optional
  gidRangeEnd: "2000" # optional
  basePath: "/dynamic_provisioning" # optional
  subPathPattern: "${.PVC.namespace}/${.PVC.name}" # optional
  ensureUniqueDirectory: "true" # optional
  reuseAccessPoint: "false" # optional
  
#nginx.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-alb-test
  labels:
    app: test-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: test-app
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
       app: test-app
    spec:
      containers:
      - image: 730335635262.dkr.ecr.ap-northeast-2.amazonaws.com/eks-image:v1.0
        name: nginxtom
        ports:
        - containerPort: 80
        resources:
          requests:
            memory: 256Mi
            cpu: 200m
          limits:
            memory: 256Mi
            cpu: 200m
        volumeMounts:
        - name: pv-testweb
          mountPath: /usr/share/nginx/html
      volumes:
      - name: pv-testweb
        persistentVolumeClaim:
          claimName: pvc-testweb
      nodeSelector:
        kubernetes.io/hostname: ip-10-250-2-188.ap-northeast-2.compute.internal
---
apiVersion: v1
kind: Service
metadata:
  name: alb-test-svc
spec:
  selector:
    app: test-app
  ports:
  - name: http
    port: 80
    targetPort: 80
  type: ClusterIP
  clusterIP: 172.20.10.20
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: alb-test-demo
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:ap-northeast-2:730335635262:certificate/98c294a6-aaa9-4e1e-9991-62df987b6807
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/ssl-redirect: '443'
spec:
  ingressClassName: alb
  rules:
  - http:
      paths:
      - path: /index.html
        pathType: Prefix
        backend:
          service:
            name: alb-test-svc
            port:
              number: 80


#nginx-pv.yaml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-testweb
spec:
  capacity:
    storage: 5Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: efs-sc
  csi:
    driver: efs.csi.aws.com
    volumeHandle: fs-01c4a0f6cf827cabe
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-testweb
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: efs-sc
  resources:
    requests:
      storage: 5Gi

#tomcat.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tomtest
  labels:
    app: tomtest-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: tomtest-app
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
       app: tomtest-app
    spec:
      containers:
      - image: 730335635262.dkr.ecr.ap-northeast-2.amazonaws.com/eks-tomcat:v1.0
        name: tomtest
        ports:
        - containerPort: 8080
        resources:
          requests:
            memory: 512Mi
            cpu: 400m
          limits:
            memory: 512Mi
            cpu: 400m
        volumeMounts:
        - name: pv-test
          mountPath: /usr/local/tomcat9.0/webapps/ROOT/
      volumes:
      - name: pv-test
        persistentVolumeClaim:
          claimName: pvc-test
      nodeSelector:
        kubernetes.io/hostname: ip-10-250-2-188.ap-northeast-2.compute.internal

---

apiVersion: v1
kind: Service
metadata:
  name: test-svc
spec:
  selector:
    app: tomtest-app
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
  type: ClusterIP
  clusterIP: 172.20.20.20

#tomcat-pv.yaml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-test
spec:
  capacity:
    storage: 5Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: efs-sc
  csi:
    driver: efs.csi.aws.com
    volumeHandle: fs-01c4a0f6cf827cabe
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-test
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: efs-sc
  resources:
    requests:
      storage: 5Gi