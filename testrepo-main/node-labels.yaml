apiVersion: v1
kind: Node
metadata:
  name: k8s-worker1
  
# 저희는 nodeAffinity나 podAffinity을 사용하는 대신
# node-labels.yaml 파일에서 node의 scheduling을 정의하였습니다.
# k8s-worker1 노드는 nginx 디플로이먼트의 레이블에 포함되는 
# 파드의 스케줄링에만 관여하도록 했습니다.

  labels:
    app: web-app
    sign: sign-app
    order: order-app
---
apiVersion: v1
kind: Node
metadata:
  name: k8s-worker2

# k8s-worker2 노드는 Tomcat 디플로이먼트의 레이블에 포함되는 
# 파드의 스케줄링에만 관여하도록 했습니다.
# jmeter 부하 테스트 결과 3개의 nginx 디플로이먼트 파일의 리소스 사용량과 
# 1개의 Tomcat 디플로이먼트 파일의 리소스 사용량에 눈에 띄는 차이가 없어
# 각 워커 노드에 다른 디플로이먼트 파일의 노드 스케줄링을 설정하였습니다.

  labels:
    app: was-app
